name: Taweret test and deploy

on:
  pull_request:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

jobs:
  test:
   strategy:
     matrix:
       os: [ubuntu-latest]
       python-version: ["3.10", "3.11"]
   runs-on: ${{ matrix.os }}
   env:
     CLONE_PATH:  ${{ github.workspace }}
   steps:
     - uses: actions/checkout@v4 
     - name: Setup python ${{ matrix.python-version }}
       uses: actions/setup-python@v5
       with:
         python-version: ${{ matrix.python-version }}
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         python -m pip install --upgrade setuptools
         pip install -e $CLONE_PATH
     - name: Run pytests (Linux)
       if: runner.os == 'Linux'
       run: |
         wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.2.tar.gz
         tar -xvf ./openmpi-4.0.2.tar.gz
         ./openmpi-4.0.2/configure --prefix="/home/${USER}/.openmpi"
         make -j
         make install
         export PATH=${PATH}:/home/${USER}/.openmpi/bin/
         export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/${USER}/.openmpi/lib/
         which mpirun
         #ls -la
         #ldd $pythonLocation/lib/python3.10/site-packages/openbtmixing/.libs/openbtcli
         pushd $CLONE_PATH
         pytest --cov=Taweret test/
         popd
     - name: Run pytest (MacOS)
       if: runner.os == 'macOS'
       run: |
         /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
         brew install open-mpi
         pip show openbtmixing
         # TODO: Will coverage change based on OS?  If not, then only test
         # coverage with one test setup.
         pytest --cov=Taweret test/
     - name: Upload coverage reports to Codecov
       uses: codecov/codecov-action@v4.0.1
       with:
         token: ${{ secrets.KEVIN_CODECOV_TOKEN }}
         slug: bandframework/Taweret

#  deploy:
#    runs-on: ubuntu-latest
#    needs: [test]
#    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
#    environment:
#      name: pypi
#      url: https://pypi.org/p/Taweret
#    permissions:
#      id-token: write
#    steps:
#      - uses: actions/checkout@v4
#      - name: Setup pyhton
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install build
#          pip install -e .
#      - name: Update directory structure 
#        run: |
#          mv Taweret src
#      - name: Update pyproject.toml
#        run: |
#          sed -i '/start-delete/,/stop-delete/d' pyproject.toml
#      - name: Build package
#        run: python -m build
#      - name: Publish package
#        uses: pypa/gh-action-pypi-publish@release/v1
